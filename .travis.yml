# Control file for Travis CI (http://travis-ci.org)
# Must be located in the root directory of the Git repository.

# By default, notification emails are sent to the PR creator and commiter.
notifications:
  email: false

sudo: required

# We define the job matrix explicitly, in order to minimize the
# combinations.
# For OS-X, using an explicit matrix is required, because Travis at
# this point only has half-baked support for Python on OS-X that does
# not work. Also, on OS-X, it needs to be invoked with language=generic
# and an empty 'python' variable in order to prevent that Travis attempts
# to install Python.
# TODO: Figure out how specific versions of Python 3.x can be used with OS-X

# When defining the job matrix explicitly, there are Travis environments
# that produce an additional default job. See these Travis issues:
#   https://github.com/travis-ci/travis-ci/issues/1228
#   https://github.com/travis-ci/travis-ci/issues/4681
#   https://github.com/travis-ci/travis-ci/issues/9843
# The public Travis does not seem to have this issue anymore,
# but Travis@IBM does have this issue (as of 9/2018). The workaround for
# this issue is to define variables globally and to exclude this same
# variable value in the matrix definition. Experiments have shown that
# not all variable combinations work. Using a combination of 'language'
# and 'os' set to the default values works.

# See note about explicit job matrix, above.
language: ruby
os: linux

matrix:

  # See note about explicit job matrix, above.
  exclude:
    - language: ruby
    - os: linux

  include:
#    - os: linux
#      language: python
#      python: "2.7"
#      env:
#        - PACKAGE_LEVEL=minimum
#      cache: pip
    - os: linux
      language: python
      python: "2.7"
      env:
        - PACKAGE_LEVEL=latest
      cache: pip
    - os: linux
      language: python
      python: "3.5"
      env:
        - PACKAGE_LEVEL=minimum
      cache: pip
#    - os: linux
#      language: python
#      python: "3.5"
#      env:
#        - PACKAGE_LEVEL=latest
#      cache: pip
#    - os: linux
#      language: python
#      python: "3.6"
#      env:
#        - PACKAGE_LEVEL=minimum
#      cache: pip
#    - os: linux
#      language: python
#      python: "3.6"
#      env:
#        - PACKAGE_LEVEL=latest
#      cache: pip
#    - os: linux
#      dist: xenial
#      sudo: required
#      language: python
#      python: "3.7"
#      env:
#        - PACKAGE_LEVEL=minimum
#      cache: pip
    - os: linux
      dist: xenial
      sudo: required
      language: python
      python: "3.7"
      env:
        - PACKAGE_LEVEL=latest
      cache: pip
#    - os: linux
#      language: python
#      python: "pypy-5.3.1"  # Python 2.7.10
#      env:
#        - PACKAGE_LEVEL=minimum
#      cache: pip
#    - os: linux
#      language: python
#      python: "pypy-5.3.1"  # Python 2.7.10
#      env:
#        - PACKAGE_LEVEL=latest
#      cache: pip
    - os: osx
      language: generic
      python:
      env:
        - PACKAGE_LEVEL=minimum
        - PYTHON=2
      cache: pip
#    - os: osx
#      language: generic
#      python:
#      env:
#        - PACKAGE_LEVEL=latest
#        - PYTHON=2
#      cache: pip
#    - os: osx
#      language: generic
#      python:
#      env:
#        - PACKAGE_LEVEL=minimum
#        - PYTHON=3
#      cache: pip
    - os: osx
      language: generic
      python:
      env:
        - PACKAGE_LEVEL=latest
        - PYTHON=3
      cache: pip

# commands to install dependencies
install:
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
      if [[ ${PYTHON:0:1} == '2' ]]; then
        OSX_PYTHON_PKG=python;
        export PYTHON_CMD=python;
        export PIP_CMD=pip;
      else
        OSX_PYTHON_PKG=python3;
        export PYTHON_CMD=python3;
        export PIP_CMD=pip3;
      fi;
      brew update;
      brew ls --versions $OSX_PYTHON_PKG && brew upgrade $OSX_PYTHON_PKG || brew install $OSX_PYTHON_PKG;
    else
      export PYTHON_CMD=python;
      export PIP_CMD=pip;
    fi
  - id
  - pwd
  - git clone https://github.com/andy-maier/ansible.git --branch zhmc-fixes --depth 1 ../ansible
  - $PIP_CMD list --format columns
  - make develop
  - make install
  - $PIP_CMD install python-coveralls
  - $PIP_CMD list --format columns
  - if [[ $TRAVIS_PYTHON_VERSION == 2.7 && $PACKAGE_LEVEL == latest ]]; then make doccheck; fi
# Note: the module doc build generates different order of module suboptions on py2 and py3.

# commands to run builds & tests
script:
  - make docs
  - make check
  - make test

after_success:
  - if [[ $TRAVIS_PYTHON_VERSION == 2.7 && $PACKAGE_LEVEL == latest ]]; then coveralls; fi
